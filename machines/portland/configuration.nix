{ config, pkgs, ... }:

{
	# Import other configuration modules
	# (hardware-configuration.nix is autogenerated upon installation)
	# paths in nix expressions are always relative the file which defines them
	imports = [
		../../../hardware-configuration.nix
		../../private/users.nix
	];

	# Boot Loader
	boot.loader.systemd-boot.enable = true;
	boot.loader.efi.canTouchEfiVariables = true;

	# ZFS File System
	boot.supportedFilesystems = [ "zfs" ];
	boot.zfs = {
		extraPools = [ "tank" ];
		forceImportRoot = false;
		forceImportAll = false;
	};
	services.zfs.autoScrub.enable = true;
	services.zfs.trim.enabled = true;

	# Localization
	time.timeZone = "America/Denver";
	i18n = {
		consoleFont = "roboto-mono";
		consoleKeyMap = "us";
		defaultLocale = "en_US.UTF-8";
	};

	# Host Name
	networking.hostName = "portland";
	networking.hostId = "8425e349";

	# Networking
	networking.networkmanager.enable = true;

	# Packages
	environment.systemPackages = with pkgs; [
		git
		powershell
		ranger
		tmux
		unzip
		vim
		wget
	];

	# Fonts
	fonts = {
		enableFontDir = true;
		fontconfig = {
			enable = true;
			defaultFonts.monospace = [ "roboto-mono" ];
			defaultFonts.sansSerif = [ "roboto" ];
			defaultFonts.serif = [ "roboto-slab" ];
		};
		fonts = with pkgs; [
			roboto
			roboto-mono
			roboto-slab
		];
	};

	# Some programs need SUID wrappers, can be configured further or are
	# started in user sessions.
	programs.bash.enableCompletion = true;
	programs.mtr.enable = true;
	programs.gnupg.agent = { enable = true; enableSSHSupport = true; };

	# OpenSSH Service
	services.openssh = {
	enable = true;
	ports = [ 22 ];
	permitRootLogin = "no";
	passwordAuthentication = false;
	extraConfig = "
		# Allow Local Lan to login with password authentication
		Match address 192.168.8.0/24
		PasswordAuthentication yes
	";
	};

	# Fail2ban Service
	services.fail2ban = {
	enable = true;
	jails.DEFAULT = ''
		ignoreip = 127.0.0.1/8,192.168.8.0/24
		bantime = 3600
		maxretry = 4
	'';
	jails.sshd = ''
		filter = sshd
		action = iptables[name=ssh, port=22, protocol=tcp]
		enabled = true
	'';
	jails.sshd-dos = ''
		filter = sshd-ddos
		action = iptables[name=ssh, port=22, protocol=tcp]
		bantime = 7200
		enabled = true
	'';
	jails.port-scan = ''
		filter = port-scan
		action = iptables-allports[name=port-scan]
		bantime = 7200
		enabled = true
	'';
	};
	environment.etc."fail2ban/filter.d/port-scan.conf".text = ''
		[Definition]
		failregex = rejected connection: .* SRC=<HOST>
	'';

	# Docker Service
	virtualisation.docker = {
		enable = true;
		enableOnBoot = true;
		storageDriver = "zfs";
		extraOptions = "--graph=/tank/docker --userns-remap=true --ipv6=true --fixed-cidr-v6=2001:db8:1::/64";
	};
	systemd.services.docker.after = ["zfs-mount.service"];
	users.users.dockremap = {
		isSystemUser = true;
		uid = 10000;
		group = "dockremap";
		subUidRanges = [{ startUid = 427680; count = 65536; }];
		subGidRanges = [{ startGid = 427680; count = 65536; }];
	};

	# Firewall
	networking.firewall.enable = true;
	networking.firewall.allowedTCPPorts = [ 22 ];
	#networking.firewall.allowedUDPPorts = [ ...];

	# Automatic Updates
	system.autoUpgrade = {
		enable = true;
		dates = "03:00";
	};

	# Automatic Garbage Collection
	nix.gc = {
		automatic = true;
		dates = "12:00";
		options = "--delete-older-than 15";
	};

	# This value determines the NixOS release with which your system is to be
	# compatible, in order to avoid breaking some software such as database
	# servers. You should change this only after NixOs release notes say you
	# should.
	system.stateVersion = "19.03"; # Did you read the comment?
}
